name: build

on:
  # Triggers the workflow on push or pull request events but only for the main branch
  push:
    branches: [ main ]
  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:
    
env:
  FLUTTER_VERSION: '2.10.5' 

jobs:
  build-macos:
    runs-on: macos-latest
    steps:
      - uses: actions/checkout@v3
      - uses: subosito/flutter-action@v2
        with:
          flutter-version: ${{env.FLUTTER_VERSION}}
          channel: 'stable'
          cache: true
          architecture: x64
      - run: flutter pub get
      - run: flutter pub run build_runner build
      - run: flutter config --enable-macos-desktop
      - name: Install app dmg
        run: npm install -g appdmg
      - name: Create dmg
        run: flutter pub run flutter_distributor:main package --platform macos --targets dmg
      - name: Upload MacOS artifact
        uses: actions/upload-artifact@v3
        with:
          name: ac_companion-macos
          path: "dist/**/*.dmg"
  build-linux:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - uses: subosito/flutter-action@v2
        with:
          flutter-version: ${{env.FLUTTER_VERSION}}
          channel: 'stable'
          cache: true
          architecture: x64
      - run: flutter pub get
      - run: flutter pub run build_runner build
      - run: flutter config --enable-linux-desktop
      - name: Install linux flutter sdk requirements
        run: sudo apt-get install clang cmake ninja-build pkg-config libgtk-3-dev liblzma-dev
      - name: Install flutter secure storage requirements
        run: sudo apt-get install libsecret-1-dev libjsoncpp-dev libsecret-1-0
      - name: Create deb
        run: flutter pub run flutter_distributor:main package --platform linux --targets deb
      - name: Upload Linux artifact
        uses: actions/upload-artifact@v3
        with:
          name: ac_companion-linux
          path: "dist/**/*.deb"
  build-windows:
    runs-on: windows-latest
    steps:
      - uses: actions/checkout@v3
      - uses: subosito/flutter-action@v2
        with:
          flutter-version: ${{env.FLUTTER_VERSION}}
          channel: 'stable'
          cache: true
          architecture: x64
      - run: flutter pub get
      - run: flutter pub run build_runner build
      - run: flutter config --enable-windows-desktop
      - name: Create msix
        run: flutter pub run flutter_distributor:main package --platform windows --targets msix
      - name: Upload windows artifact
        uses: actions/upload-artifact@v3
        with:
          name: ac_companion-windows
          path: "dist/**/*.msix"
  release:
    name: Release
    needs: [build-macos, build-windows, build-linux]
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - name: Retrieve Version Number
        id: versions
        run: |
          APP_VERSION=$(more pubspec.yaml | grep version: | cut -d ' ' -f2)
          echo $APP_VERSION
          echo "::set-output name=version::$(echo $APP_VERSION)"
      - name: Create Release
        id: create_release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{ steps.versions.outputs.version }}
          release_name: Release ${{ steps.versions.outputs.version }}
          body: |
             Release Notes
          draft: false
          prerelease: false
      - name: Download dmg
        uses: actions/download-artifact@v3
        with:
          name: ac_companion-macos
      - name: Upload MacOS Asset
        id: upload-release-asset-macos
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: "./${{ steps.versions.outputs.version }}/appcenter_companion-${{ steps.versions.outputs.version }}-macos.dmg"
          asset_name: "appcenter_companion-${{ steps.versions.outputs.version }}-macos.dmg"
          asset_content_type: application/octet-stream
      - name: Download deb
        uses: actions/download-artifact@v3
        with:
          name: ac_companion-linux
      - name: Upload Linux Asset
        id: upload-release-asset-linux
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: "./${{ steps.versions.outputs.version }}/appcenter_companion-${{ steps.versions.outputs.version }}-linux_deb.deb"
          asset_name: "appcenter_companion-${{ steps.versions.outputs.version }}-linux.deb"
          asset_content_type: application/octet-stream
      - name: Download exe
        uses: actions/download-artifact@v3
        with:
          name: ac_companion-windows
      - name: Upload Windows Asset
        id: upload-release-asset-windows
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: "./${{ steps.versions.outputs.version }}/appcenter_companion-${{ steps.versions.outputs.version }}-windows.msix"
          asset_name: "appcenter_companion-${{ steps.versions.outputs.version }}-windows.msix"
          asset_content_type: application/octet-stream
